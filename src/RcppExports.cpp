// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393
#include "opencv_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// cvmat_bgr
XPtrMat cvmat_bgr(Rcpp::RawVector img, int width, int height);
RcppExport SEXP _image_textlinedetector_cvmat_bgr(SEXP imgSEXP, SEXP widthSEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RawVector >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_bgr(img, width, height));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_bw
XPtrMat cvmat_bw(Rcpp::RawVector img, int width, int height);
RcppExport SEXP _image_textlinedetector_cvmat_bw(SEXP imgSEXP, SEXP widthSEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RawVector >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_bw(img, width, height));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_rect
XPtrMat cvmat_rect(XPtrMat ptr, int x, int y, int width, int height);
RcppExport SEXP _image_textlinedetector_cvmat_rect(SEXP ptrSEXP, SEXP xSEXP, SEXP ySEXP, SEXP widthSEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_rect(ptr, x, y, width, height));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_polygon
XPtrMat cvmat_polygon(XPtrMat ptr, Rcpp::List pts, bool convex, bool crop, int color);
RcppExport SEXP _image_textlinedetector_cvmat_polygon(SEXP ptrSEXP, SEXP ptsSEXP, SEXP convexSEXP, SEXP cropSEXP, SEXP colorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pts(ptsSEXP);
    Rcpp::traits::input_parameter< bool >::type convex(convexSEXP);
    Rcpp::traits::input_parameter< bool >::type crop(cropSEXP);
    Rcpp::traits::input_parameter< int >::type color(colorSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_polygon(ptr, pts, convex, crop, color));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_destroy
void cvmat_destroy(XPtrMat image);
RcppExport SEXP _image_textlinedetector_cvmat_destroy(SEXP imageSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type image(imageSEXP);
    cvmat_destroy(image);
    return R_NilValue;
END_RCPP
}
// cvmat_dead
bool cvmat_dead(XPtrMat image);
RcppExport SEXP _image_textlinedetector_cvmat_dead(SEXP imageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type image(imageSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_dead(image));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_size
int cvmat_size(XPtrMat image);
RcppExport SEXP _image_textlinedetector_cvmat_size(SEXP imageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type image(imageSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_size(image));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_new
XPtrMat cvmat_new();
RcppExport SEXP _image_textlinedetector_cvmat_new() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(cvmat_new());
    return rcpp_result_gen;
END_RCPP
}
// cvmat_dupe
XPtrMat cvmat_dupe(XPtrMat image);
RcppExport SEXP _image_textlinedetector_cvmat_dupe(SEXP imageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type image(imageSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_dupe(image));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_read
XPtrMat cvmat_read(Rcpp::String path);
RcppExport SEXP _image_textlinedetector_cvmat_read(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_read(path));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_camera
XPtrMat cvmat_camera();
RcppExport SEXP _image_textlinedetector_cvmat_camera() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(cvmat_camera());
    return rcpp_result_gen;
END_RCPP
}
// cvmat_write
std::string cvmat_write(XPtrMat image, std::string path);
RcppExport SEXP _image_textlinedetector_cvmat_write(SEXP imageSEXP, SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type image(imageSEXP);
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_write(image, path));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_resize
XPtrMat cvmat_resize(XPtrMat ptr, int width, int height);
RcppExport SEXP _image_textlinedetector_cvmat_resize(SEXP ptrSEXP, SEXP widthSEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_resize(ptr, width, height));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_bitmap
Rcpp::RawVector cvmat_bitmap(XPtrMat ptr);
RcppExport SEXP _image_textlinedetector_cvmat_bitmap(SEXP ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_bitmap(ptr));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_copyto
XPtrMat cvmat_copyto(XPtrMat from, XPtrMat to, XPtrMat mask);
RcppExport SEXP _image_textlinedetector_cvmat_copyto(SEXP fromSEXP, SEXP toSEXP, SEXP maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type from(fromSEXP);
    Rcpp::traits::input_parameter< XPtrMat >::type to(toSEXP);
    Rcpp::traits::input_parameter< XPtrMat >::type mask(maskSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_copyto(from, to, mask));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_info
Rcpp::List cvmat_info(XPtrMat image);
RcppExport SEXP _image_textlinedetector_cvmat_info(SEXP imageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type image(imageSEXP);
    rcpp_result_gen = Rcpp::wrap(cvmat_info(image));
    return rcpp_result_gen;
END_RCPP
}
// cvmat_display
void cvmat_display(XPtrMat ptr);
RcppExport SEXP _image_textlinedetector_cvmat_display(SEXP ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    cvmat_display(ptr);
    return R_NilValue;
END_RCPP
}
// livestream
void livestream(Rcpp::Function filter);
RcppExport SEXP _image_textlinedetector_livestream(SEXP filterSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type filter(filterSEXP);
    livestream(filter);
    return R_NilValue;
END_RCPP
}
// data_prefix
Rcpp::String data_prefix();
RcppExport SEXP _image_textlinedetector_data_prefix() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(data_prefix());
    return rcpp_result_gen;
END_RCPP
}
// set_num_threads
int set_num_threads(int n);
RcppExport SEXP _image_textlinedetector_set_num_threads(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(set_num_threads(n));
    return rcpp_result_gen;
END_RCPP
}
// textlinedetector_astarpath
Rcpp::List textlinedetector_astarpath(XPtrMat ptr, bool morph, int step, int mfactor, bool trace);
RcppExport SEXP _image_textlinedetector_textlinedetector_astarpath(SEXP ptrSEXP, SEXP morphSEXP, SEXP stepSEXP, SEXP mfactorSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< bool >::type morph(morphSEXP);
    Rcpp::traits::input_parameter< int >::type step(stepSEXP);
    Rcpp::traits::input_parameter< int >::type mfactor(mfactorSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(textlinedetector_astarpath(ptr, morph, step, mfactor, trace));
    return rcpp_result_gen;
END_RCPP
}
// textlinedetector_crop
XPtrMat textlinedetector_crop(XPtrMat ptr);
RcppExport SEXP _image_textlinedetector_textlinedetector_crop(SEXP ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(textlinedetector_crop(ptr));
    return rcpp_result_gen;
END_RCPP
}
// textlinedetector_resize
XPtrMat textlinedetector_resize(XPtrMat ptr, int width);
RcppExport SEXP _image_textlinedetector_textlinedetector_resize(SEXP ptrSEXP, SEXP widthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    rcpp_result_gen = Rcpp::wrap(textlinedetector_resize(ptr, width));
    return rcpp_result_gen;
END_RCPP
}
// textlinedetector_binarization
XPtrMat textlinedetector_binarization(XPtrMat ptr, bool light, int type);
RcppExport SEXP _image_textlinedetector_textlinedetector_binarization(SEXP ptrSEXP, SEXP lightSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< bool >::type light(lightSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(textlinedetector_binarization(ptr, light, type));
    return rcpp_result_gen;
END_RCPP
}
// textlinedetector_linesegmentation
Rcpp::List textlinedetector_linesegmentation(XPtrMat ptr, int chunksNumber, int chunksProcess, int kernelSize, int sigma, int theta);
RcppExport SEXP _image_textlinedetector_textlinedetector_linesegmentation(SEXP ptrSEXP, SEXP chunksNumberSEXP, SEXP chunksProcessSEXP, SEXP kernelSizeSEXP, SEXP sigmaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< int >::type chunksNumber(chunksNumberSEXP);
    Rcpp::traits::input_parameter< int >::type chunksProcess(chunksProcessSEXP);
    Rcpp::traits::input_parameter< int >::type kernelSize(kernelSizeSEXP);
    Rcpp::traits::input_parameter< int >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(textlinedetector_linesegmentation(ptr, chunksNumber, chunksProcess, kernelSize, sigma, theta));
    return rcpp_result_gen;
END_RCPP
}
// textlinedetector_wordsegmentation
Rcpp::List textlinedetector_wordsegmentation(XPtrMat ptr, int kernelSize, int sigma, int theta);
RcppExport SEXP _image_textlinedetector_textlinedetector_wordsegmentation(SEXP ptrSEXP, SEXP kernelSizeSEXP, SEXP sigmaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< int >::type kernelSize(kernelSizeSEXP);
    Rcpp::traits::input_parameter< int >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(textlinedetector_wordsegmentation(ptr, kernelSize, sigma, theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_image_textlinedetector_cvmat_bgr", (DL_FUNC) &_image_textlinedetector_cvmat_bgr, 3},
    {"_image_textlinedetector_cvmat_bw", (DL_FUNC) &_image_textlinedetector_cvmat_bw, 3},
    {"_image_textlinedetector_cvmat_rect", (DL_FUNC) &_image_textlinedetector_cvmat_rect, 5},
    {"_image_textlinedetector_cvmat_polygon", (DL_FUNC) &_image_textlinedetector_cvmat_polygon, 5},
    {"_image_textlinedetector_cvmat_destroy", (DL_FUNC) &_image_textlinedetector_cvmat_destroy, 1},
    {"_image_textlinedetector_cvmat_dead", (DL_FUNC) &_image_textlinedetector_cvmat_dead, 1},
    {"_image_textlinedetector_cvmat_size", (DL_FUNC) &_image_textlinedetector_cvmat_size, 1},
    {"_image_textlinedetector_cvmat_new", (DL_FUNC) &_image_textlinedetector_cvmat_new, 0},
    {"_image_textlinedetector_cvmat_dupe", (DL_FUNC) &_image_textlinedetector_cvmat_dupe, 1},
    {"_image_textlinedetector_cvmat_read", (DL_FUNC) &_image_textlinedetector_cvmat_read, 1},
    {"_image_textlinedetector_cvmat_camera", (DL_FUNC) &_image_textlinedetector_cvmat_camera, 0},
    {"_image_textlinedetector_cvmat_write", (DL_FUNC) &_image_textlinedetector_cvmat_write, 2},
    {"_image_textlinedetector_cvmat_resize", (DL_FUNC) &_image_textlinedetector_cvmat_resize, 3},
    {"_image_textlinedetector_cvmat_bitmap", (DL_FUNC) &_image_textlinedetector_cvmat_bitmap, 1},
    {"_image_textlinedetector_cvmat_copyto", (DL_FUNC) &_image_textlinedetector_cvmat_copyto, 3},
    {"_image_textlinedetector_cvmat_info", (DL_FUNC) &_image_textlinedetector_cvmat_info, 1},
    {"_image_textlinedetector_cvmat_display", (DL_FUNC) &_image_textlinedetector_cvmat_display, 1},
    {"_image_textlinedetector_livestream", (DL_FUNC) &_image_textlinedetector_livestream, 1},
    {"_image_textlinedetector_data_prefix", (DL_FUNC) &_image_textlinedetector_data_prefix, 0},
    {"_image_textlinedetector_set_num_threads", (DL_FUNC) &_image_textlinedetector_set_num_threads, 1},
    {"_image_textlinedetector_textlinedetector_astarpath", (DL_FUNC) &_image_textlinedetector_textlinedetector_astarpath, 5},
    {"_image_textlinedetector_textlinedetector_crop", (DL_FUNC) &_image_textlinedetector_textlinedetector_crop, 1},
    {"_image_textlinedetector_textlinedetector_resize", (DL_FUNC) &_image_textlinedetector_textlinedetector_resize, 2},
    {"_image_textlinedetector_textlinedetector_binarization", (DL_FUNC) &_image_textlinedetector_textlinedetector_binarization, 3},
    {"_image_textlinedetector_textlinedetector_linesegmentation", (DL_FUNC) &_image_textlinedetector_textlinedetector_linesegmentation, 6},
    {"_image_textlinedetector_textlinedetector_wordsegmentation", (DL_FUNC) &_image_textlinedetector_textlinedetector_wordsegmentation, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_image_textlinedetector(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
